VaE2=var(xA2*md2$coefficients[2])
VdE2=var(xD2*md2$coefficients[3])
VcE2=2*var(xA2*md2$coefficients[2], xD2*md2$coefficients[3])
Vc[i,]=c(p, a, d, Va, Vd, VaE, VdE, VcE, VaE2, VdE2, VcE2)
}
colMeans(Vc)
plot(Vc[,4], Vc[,10])
plot(Vc[,4], Vc[,9])
plot(Vc[,5], Vc[,10])
plot(Vc[,4], Vc[,9])
plot(Vc[,5], Vc[,10])
plot(Vc[,6], Vc[,11])
head(Vc)
VcE
VaE
VdE
cor(xA, xD)
VcE
sqrt(VaE*VdE)*2*cor(xA,xD)
n=2000 #sample size
m=10000 #marker
h2=0.3 #heritability
h2d=0.3
b=rnorm(m, 0, sqrt(h2/m)) #effect
d=rnorm(m, 0, sqrt(h2d/m))
SIMU=30
#simu g
library(Rcpp)
sourceCpp("~/git/Notes/R/RLib/Shotgun.cpp")
fq=runif(m, 0.3, 0.5)
dp=runif(m-1, 0.8, 0.95)
x=GenerateGenoDprimeRcpp(fq, dp, n)
#x=matrix(0, n, m)
#for(i in 1:m) {
#  x[,i]=rbinom(n, 2, fq[i])
#}
FQ=colMeans(x)/2
sA=apply(x, 2, scale)
K=sA%*%t(sA)/m
me=var(K[col(K)<row(K)])
##dominance
xd=matrix(0, n, m)
for(i in 1:m) {
cd=c(0, 2*FQ[i], 4*FQ[i]-2)
xd[,i]=cd[x[,i]+1]
}
dCt=matrix(rep(2*FQ^2, n), n, m, byrow = T)
dV=matrix(rep(sqrt(4*FQ^2*(1-FQ)^2), n), n, m, byrow = T)
sD=(xd-dCt)/dV
Kd=sD%*%t(sD)/m
med=var(Kd[col(K)<row(K)])
Dm=ifelse(x==1, 1, 0)
###dom2
xd2=matrix(0, n, m)
for(i in 1:m) {
xd2[which(x[,i]==1),i]=1
}
dCt2=matrix(rep(2*FQ*(1-FQ),n), n, m, byrow = T)
dV2=matrix(rep(sqrt(2*FQ*(1-FQ)*(1-2*FQ*(1-FQ))), n), n, m, byrow = T)
sD2=(xd2-dCt2)/dV2
Kd2=sD2%*%t(sD2)/m
med2=var(Kd2[col(K)<row(K)])
Dm2=ifelse(x==1, 1, 0)
#simu y
H2=matrix(0, SIMU, 8)
for(i in 1:SIMU) {
y=x%*%b+Dm%*%d
vy=var(y)
y=y+rnorm(n, 0, sqrt(vy/(h2+h2d)*(1-h2-h2d)))
y=scale(y)
yy=y%*%t(y)
h2Mod=lm(yy[col(yy)<row(yy)]~K[col(yy)<row(yy)]+Kd[col(yy)<row(yy)])
H2[i,1]=summary(h2Mod)$coefficients[2,1]
H2[i,2]=summary(h2Mod)$coefficients[3,1]
ss=matrix(0, m, 5)
ssd=matrix(0, m, 5)
for(j in 1:m) {
mod=lm(y~sA[,j]+sD[,j])
ss[j,1:4]=summary(mod)$coefficient[2,]
ssd[j,1:4]=summary(mod)$coefficient[3,]
}
ss[,5]=ss[,3]^2
H2[i,3]=((mean(ss[,5])-1)*n)/(n*n*me)
ssd[,5]=ssd[,3]^2
H2[i,4]=((mean(ssd[,5])-1)*n)/(n*n*med)
h2Mod2=lm(yy[col(yy)<row(yy)]~K[col(yy)<row(yy)]+Kd2[col(yy)<row(yy)])
H2[i,5]=summary(h2Mod2)$coefficients[2,1]
H2[i,6]=summary(h2Mod2)$coefficients[3,1]
ss2=matrix(0, m, 5)
ssd2=matrix(0, m, 5)
for(j in 1:m) {
mod=lm(y~sA[,j]+sD2[,j])
ss2[j,1:4]=summary(mod)$coefficient[2,]
ssd2[j,1:4]=summary(mod)$coefficient[3,]
}
ss2[,5]=ss2[,3]^2
H2[i,7]=((mean(ss2[,5])-1)*n)/(n*n*me)
ssd2[,5]=ssd2[,3]^2
H2[i,8]=((mean(ssd2[,5])-1)*n)/(n*n*med2)
}
barplot(t(H2), beside = T, col=rep(c("red", "blue"),4))
abline(h=c(h2, h2d))
barplot(t(H2[,c(3,4,7,8)]), beside = T, col=rep(c("red", "blue"), 4))
abline(h=c(h2, h2d))
colMeans(Vc)
colMeans(H2)
head(sD)
dim(sD)
sD[1:4, 1:4]
sd2[1:4, 1:4]
sD2[1:4, 1:4]
head(xd2[1:4, 1:4])
mean(sD2[,1])
var(sD2[,1])
##dominance
xd=matrix(0, n, m)
for(i in 1:m) {
cd=c(0, 2*FQ[i], 4*FQ[i]-2)
xd[,i]=cd[x[,i]+1]
}
dCt=matrix(rep(2*FQ*(1-FQ), n), n, m, byrow = T)
dV=matrix(rep(sqrt(4*FQ^2*(1-FQ)^2), n), n, m, byrow = T)
sD=(xd-dCt)/dV
xd=matrix(0, n, m)
for(i in 1:m) {
cd=c(0, 2*FQ[i], 4*FQ[i]-2)
xd[,i]=cd[x[,i]+1]
}
dCt=matrix(rep(2*FQ^2, n), n, m, byrow = T)
dV=matrix(rep(sqrt(4*FQ^2*(1-FQ)^2), n), n, m, byrow = T)
sD=(xd-dCt)/dV
mean(sD[,1])
var(sD[,1])
var(sD[,2])
mean(sD[,2])
mean(sD2[,1])
var(sD2[,1])
n=10000
simu=1000
Vc=matrix(0, simu, 11)
for(i in 1:simu) {
p=runif(1, 0.1, 0.9)
xA=rbinom(n, 2, p)
xD=ifelse(xA==1, 1, 0)
#  (1-2*p)/sqrt(1-2*p*(1-p))
#  cor(xA, xD)
a=rnorm(1)
d=rnorm(1)
y=xA*a+xD*d+rnorm(n)
md=lm(y~xA+xD)
Va=2*p*(1-p)*(a+(1-2*p)*d)^2
Vd=4*p^2*(1-p)^2*d^2
Va+Vd
VaE=var(xA*md$coefficients[2])
VdE=var(xD*md$coefficients[3])
VcE=2*var(xA*md$coefficients[2], xD*md$coefficients[3])
VaE+VdE+VcE
xA2=scale(xA)
ep=mean(xA)/2
e1=2*ep^2
e2=2*ep*(1-ep)
xD2=ifelse(xA==0, (0-e1)/e2, ifelse(xA==1, (2*ep-e1)/e2, (4*ep-2-e1)/e2))
md2=lm(y~xA2+xD2)
VaE2=var(xA2*md2$coefficients[2])
VdE2=var(xD2*md2$coefficients[3])
VcE2=2*var(xA2*md2$coefficients[2], xD2*md2$coefficients[3])
Vc[i,]=c(p, a, d, Va, Vd, VaE, VdE, VcE, VaE2, VdE2, VcE2)
}
colMeans(Vc)
n=1000 #sample size
m=10000 #marker
h2=0.3 #heritability
h2d=0.3
b=rnorm(m, 0, sqrt(h2/m)) #effect
d=rnorm(m, 0, sqrt(h2d/m))
SIMU=30
#simu g
library(Rcpp)
sourceCpp("~/git/Notes/R/RLib/Shotgun.cpp")
fq=runif(m, 0.3, 0.5)
dp=runif(m-1, 0.8, 0.95)
x=GenerateGenoDprimeRcpp(fq, dp, n)
#x=matrix(0, n, m)
#for(i in 1:m) {
#  x[,i]=rbinom(n, 2, fq[i])
#}
FQ=colMeans(x)/2
sA=apply(x, 2, scale)
K=sA%*%t(sA)/m
me=var(K[col(K)<row(K)])
##dominance
xd=matrix(0, n, m)
for(i in 1:m) {
cd=c(0, 2*FQ[i], 4*FQ[i]-2)
xd[,i]=cd[x[,i]+1]
}
dCt=matrix(rep(2*FQ^2, n), n, m, byrow = T)
dV=matrix(rep(sqrt(4*FQ^2*(1-FQ)^2), n), n, m, byrow = T)
sD=(xd-dCt)/dV
Kd=sD%*%t(sD)/m
med=var(Kd[col(K)<row(K)])
Dm=ifelse(x==1, 1, 0)
###dom2
xd2=matrix(0, n, m)
for(i in 1:m) {
xd2[which(x[,i]==1),i]=1
}
dCt2=matrix(rep(2*FQ*(1-FQ),n), n, m, byrow = T)
dV2=matrix(rep(sqrt(2*FQ*(1-FQ)*(1-2*FQ*(1-FQ))), n), n, m, byrow = T)
sD2=(xd2-dCt2)/dV2
Kd2=sD2%*%t(sD2)/m
med2=var(Kd2[col(K)<row(K)])
Dm2=ifelse(x==1, 1, 0)
#simu y
H2=matrix(0, SIMU, 8)
for(i in 1:SIMU) {
y=x%*%b+Dm%*%d
vy=var(y)
y=y+rnorm(n, 0, sqrt(vy/(h2+h2d)*(1-h2-h2d)))
y=scale(y)
yy=y%*%t(y)
h2Mod=lm(yy[col(yy)<row(yy)]~K[col(yy)<row(yy)]+Kd[col(yy)<row(yy)])
H2[i,1]=summary(h2Mod)$coefficients[2,1]
H2[i,2]=summary(h2Mod)$coefficients[3,1]
ss=matrix(0, m, 5)
ssd=matrix(0, m, 5)
for(j in 1:m) {
mod=lm(y~sA[,j]+sD[,j])
ss[j,1:4]=summary(mod)$coefficient[2,]
ssd[j,1:4]=summary(mod)$coefficient[3,]
}
ss[,5]=ss[,3]^2
H2[i,3]=((mean(ss[,5])-1)*n)/(n*n*me)
ssd[,5]=ssd[,3]^2
H2[i,4]=((mean(ssd[,5])-1)*n)/(n*n*med)
h2Mod2=lm(yy[col(yy)<row(yy)]~K[col(yy)<row(yy)]+Kd2[col(yy)<row(yy)])
H2[i,5]=summary(h2Mod2)$coefficients[2,1]
H2[i,6]=summary(h2Mod2)$coefficients[3,1]
ss2=matrix(0, m, 5)
ssd2=matrix(0, m, 5)
for(j in 1:m) {
mod=lm(y~sA[,j]+sD2[,j])
ss2[j,1:4]=summary(mod)$coefficient[2,]
ssd2[j,1:4]=summary(mod)$coefficient[3,]
}
ss2[,5]=ss2[,3]^2
H2[i,7]=((mean(ss2[,5])-1)*n)/(n*n*me)
ssd2[,5]=ssd2[,3]^2
H2[i,8]=((mean(ssd2[,5])-1)*n)/(n*n*med2)
}
barplot(t(H2[,c(3,4,7,8)]), beside = T, col=rep(c("red", "blue"), 4))
abline(h=c(h2, h2d))
-log10(0.05/(700000*300000))
colMeans(H2[,c(3,4,7,8)])
apply(H2[,c(3,4,7,8)], 1, sd)
apply(H2[,c(3,4,7,8)], 2, sd)
2*10000/1000^2
2*10000/5000^2
a=c(2,5)
barplot(a)
barplot(t(H2[,c(3,4,7,8)]), beside = T, col=rep(c("red", "blue"), 4))
m=matrix(c(2,5),1,2)
barplot(a)
barplot(t(a))
m=matrix(c(2,5,3,7),1,2)
barplot(m)
barplot(m)
m
m=matrix(c(2,5,3,7),2,2)
barplot(m)
m=matrix(c(2,5,3,7,1,1),3,2)
barplot(m)
m=matrix(c(2,5,3,7,1,1),2,3)
barpot(m)
barplot(m)
n=500
m=10000
x=matrix(rbinom(n*m, 2, 0.5), n, m)
dim(x)
sx=scale(x)
z=rnorm(n)
x1=sx%*%(t(sx)%*%z)
n=500
m=10000
x=matrix(rbinom(n*m, 2, 0.5), n, m)
sx=scale(x)
B=10
Me=matrix(0, B, 2)
for(i in 1:B) {
z=rnorm(n)
x1=sx%*%(t(sx)%*%z)
Me[i,1]=sum(x1^2)
}
Me
(Me[,1]-n)/n^2
(Me[,1]-n)/n^2/m^2
n^2/m+n
dim(x1)
n=500
m=10000
x=matrix(rbinom(n*m, 2, 0.5), n, m)
sx=scale(x)
B=10
Me=matrix(0, B, 2)
for(i in 1:B) {
z=rnorm(n)
x1=sx%*%(t(sx)%*%z)
Me[i,1]=sum(x1^2)/m^2
}
Me
n=500
m=10000
x=matrix(rbinom(n*m, 2, 0.5), n, m)
sx=scale(x)
B=10
Me=matrix(0, B, 2)
for(i in 1:B) {
z=rnorm(n)
x1=sx%*%(t(sx)%*%z)
Me[i,1]=sum(x1^2)/m^2
Me[i,2]=(Me[i,1]-n)/n^2
}
colMeans(Me)
Me
n^2/m+n
mean(Me[,1])
n=500
m=10000
x=matrix(rbinom(n*m, 2, 0.5), n, m)
sx=scale(x)
B=100
Me=matrix(0, B, 2)
for(i in 1:B) {
z=rnorm(n)
x1=sx%*%(t(sx)%*%z)
Me[i,1]=sum(x1^2)/m^2
Me[i,2]=(Me[i,1]-n)/n^2
}
colMeans(Me)
Me
colMeans(Me)
g=sx%*%t(sx)/m
dim(g)
n=500
m=100000
x=matrix(rbinom(n*m, 2, 0.5), n, m)
sx=scale(x)
g=sx%*%t(sx)/m
B=100
Me=matrix(0, B, 2)
for(i in 1:B) {
z=rnorm(n)
x1=sx%*%(t(sx)%*%z)
Me[i,1]=sum(x1^2)/m^2
Me[i,2]=(Me[i,1]-n)/n^2
}
colMeans(Me)
n^2/m+n
sd(Me[,2])
sd(Me[,1])
Me[,2]=n^2/(Me[,1]-n)
colMeans(Me)
n^2/m+n
n
m
n^2/m+n
colMeans(Me)
sd(Me[,1])
sd(Me[,2])
hist(Me[,1])
hist(Me[,2])
hist(Me[,1])
Me[,2]
Me[,2]
mean(Me[,1])
mean(Me[,1])-n
(mean(Me[,1])-n)/n^2
(mean(Me[,1])-n)/n^2
(mean(Me[,1])-n-1)/(n-1)^2
(mean(Me[,1])-n)/(n-1)^2
(mean(Me[,1])-n)/(n)^2
(n-1)^2/me+n
(n-1)^2/m+n
(n-1)^2/m+(n-1)
mean(Me[,1])
(mean(Me[,1])-(n-1))
(mean(Me[,1])-(n-1))/(n-1)^2
mean(Me[,1]-(n-1))/(n-1)^2
(mean(Me[,1])-(n-1))/(n-1)^2
(n-1)^2/(mean(Me[,1]-(n-1)))
(n-1)^2/(mean(Me[,1]-(n-1)))
n=500
m=100000
x=matrix(rbinom(n*m, 2, 0.5), n, m)
sx=scale(x)
g=sx%*%t(sx)/m
eg=eigen(g)
B=100
Me=matrix(0, B, 2)
for(i in 1:B) {
z=rnorm(n)
x1=sx%*%(t(sx)%*%z)
Me[i,1]=sum(x1^2)/m^2
}
(n-1)^2/(mean(Me[,1]-(n-1)))
mean(Me[,1])
n^2/m+n
n=500
m=10000
x=matrix(rbinom(n*m, 2, 0.5), n, m)
sx=scale(x)
g=sx%*%t(sx)/m
eg=eigen(g)
B=100
Me=matrix(0, B, 2)
for(i in 1:B) {
z=rnorm(n)
x1=sx%*%(t(sx)%*%z)
Me[i,1]=sum(x1^2)/m^2
}
(n-1)^2/(mean(Me[,1]-(n-1)))
mean(Me[,1])
n^2/m+n
var(g[col(g)<row(g)])
1/var(g[col(g)<row(g)])
B=1000
Me=matrix(0, B, 2)
for(i in 1:B) {
z=rnorm(n)
x1=sx%*%(t(sx)%*%z)
Me[i,1]=sum(x1^2)/m^2
}
(n-1)^2/(mean(Me[,1]-(n-1)))
sum(eg$values^4)
B=1000
Me=matrix(0, B, 2)
for(i in 1:B) {
z=rnorm(n)
x1=sx%*%(t(sx)%*%z)
Me[i,1]=sum(x1^2)/m^2
}
(n-1)^2/(mean(Me[,1]-(n-1)))
(m/n)^4/B*sum(eg$values^4)
sqrt((m/n)^4/B*sum(eg$values^4))
gear=read.table("~/arab/arab.1.egwas", as.is = T, header = T)
mm=read.table("~/Documents/workspace/proEigenGWAS/examples/Arab295eg.1.txt", as.is = T, header = T)
head(gear)
head(mm)
plot(-log10(gear$P), -log10(mm$P))
abline(a=0, b=1, col="red")
plot(gear$Chi, mm$T.stat^2)
abline(a=0, b=1)
setwd("~/Documents/workspace/proEigenGWAS/examples")
library(MultiPhen)
dat=read.plink("example")
sdat=apply(dat, 2, scale)
n=nrow(sdat)
n
library(MultiPhen)
dat=read.plink("example")
sx=apply(dat, 2, scale)
n=nrow(sdat)
n=nrow(sx)
BS=20
Lb=0
BS=20
Lb=0
for (j in 1:BS) {
z=matrix(rnorm(n), n, 1)
x1=t(sx)%*%z
x2=sx%*%x1
Lb=Lb+(t(x2)%*%x2)[1,1]
}
LK=Lb/(BS*m^2)
m=ncol(sx)
BS=20
Lb=0
for (j in 1:BS) {
z=matrix(rnorm(n), n, 1)
x1=t(sx)%*%z
x2=sx%*%x1
Lb=Lb+(t(x2)%*%x2)[1,1]
}
LK=Lb/(BS*m^2)
Lb
var(sx[,1])
mean(sx[,1])
LK
LK-n
n^2/m+n
610598520345/3.11001e+12
610598520345/6.18427e+11
LK=Lb/(BS*m^2)
LK
library(MultiPhen)
dat=read.plink("example")
sx=apply(dat, 2, scale)
n=nrow(sx)
m=ncol(sx)
BS=100
Lb=0
for (j in 1:BS) {
z=matrix(rnorm(n), n, 1)
x1=t(sx)%*%z
x2=sx%*%x1
Lb=Lb+(t(x2)%*%x2)[1,1]
}
LK=Lb/(BS*m^2)
Lb
Lb/3.11001e+12
3.11001e+12/BS
3.11001e+12/BS/m^2
